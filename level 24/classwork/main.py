'''list
არის mutable (მისი შეცვლა შეგვიძლია მოგვიანებით) მონაცემთა სტრუქტურა, რომელიც გამოიყენება ობიექტების ჯგუფისთვის. list შეიძლება შეიცავდეს ნებისმიერი ტიპის მონაცემებს, მათ შორის რიცხვებს, სტრინგებს.
'''

'''tuple
არის immutable (რომლის შეცვლაც არ შეგვიძლია) მონაცემთა სტრუქტურა, რომელიც გამოიყენება ობიექტების ჯგუფისთვის. tuple გავს  list-ს, მაგრამ მისი ელემენტების ცვლაც შეუძლებელია.
'''

'''set
არის mutable (მისი შეცვლა შეგვიძლია მოგვიანებით) მონაცემთა სტრუქტურა, რომელიც გამოიყენება უნიკალური ელემენტების ჯგუფისთვის. set-ები არ ინახავენ ელემენტების თანმიმდევრობას და არ ზღუდავენ განმეორებებად, რაც იმას ნიშნავს, რომ თითოეული ელემენტი უნდა იყოს უნიკალური.
'''

'''მსგავსებები: განიხილეთ განსხვავებები და მსგავსებები list'ს და tuple'ს შორის

1. ორივე გამოიყენება რამდენიმე მნიშვნელობის შესანახად.
2. ორივე ინარჩუნებს ელემენტების თანმიმდევრობას (indexing).
3. ორივე შეიძლება შეიცავდეს ერთნაირ ელემენტებს (duplicates).

განსხვავებები:
1. List არის mutable (ცვალებადი), ხოლო tuple არის immutable (ურღვეველი).
2. List-ების ელემენტების შეცვლა, დამატება და წაშლა შესაძლებელია, ხოლო tuple-ების შემთხვევაში ეს შეუძლებელია.
3. List-ების ზომა შეიძლება შეიცვალოს, ხოლო tuple-ების ზომა ფიქსირდება.
'''

'''მსგავსებები: განიხილეთ განსხვავებები და მსგავსებები list'ს და set'ს შორის

1. ორივე არის mutable (ცვალებადი) მონაცემთა სტრუქტურა.
2. ორივე გამოიყენება რამდენიმე ელემენტის შესანახად.
3. ორივე მოიცავს ელემენტების დამატების და წაშლის შესაძლებლობას.

განსხვავებები:
1. List-ები ინახავენ ელემენტების თანმიმდევრობას (indexing), ხოლო set-ები არ ინახავენ ელემენტების ადგილზე.
2. List-ებში შეიძლება იყოს განმეორებადი ელემენტები (duplicates), ხოლო set-ებში ყველა ელემენტი უნიკალურია.
'''

set1 = {1, 2, 3}

set1.add(4)

set1.remove(2)

print(set1)